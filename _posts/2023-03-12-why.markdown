---
layout: post
title:  "왜 Create React App 대신 Vite일까"
date:   2023-03-12 18:35:03 +0900
categories: react vite create 
---

왜 Create React App 대신 Vite일까

※ 해당 블로그는 아래 참조 링크의 블로그 글을 정리 및 번역한 포스트입니다.
https://vitejs.dev/guide/why.html#slow-server-start
https://javascript.plainenglish.io/time-to-say-goodbye-to-webpack-5bf06ff48823
https://blog.bitsrc.io/vite-is-better-than-webpack-d5dd59610d56
https://medium.com/codex/you-should-choose-vite-over-cra-for-react-apps-heres-why-47e2e7381d13
https://velog.io/@jaewoneee/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%B3%B4%EC%9D%BC%EB%9F%AC%ED%94%8C%EB%A0%88%EC%9D%B4%ED%8A%B8-Create-React-App-vs-Vite

나를 포함해서 항상 리엑트로 프로젝트를 시작할 때 숙련된 개발자든, 대부분의 개발자들은 주로 Create React App(CRA)을 이용하여 리액트 프로젝트를 생성했었는데,

저번 홈페이지 작업떄 봤던 VITE (바이트 아니고 비트)를 사용하는 것도 있다고 해서 알아보려고 글을 쓴다.
Create React App(CRA)는 리액트 팀이 추천하는 공식 리액트 보일러 플레이트이기도 하고, HMR(Hot Module Replacement)과 같은 유용한 기능을 가지고 있다고 한다..

그런데 왜 VITE인가?

Create React App(CRA)은 Webpack을 사용한다. Webpack은 자바스크립트 코드로 구성된 툴인데, 자바스크립트는 interpreted 언어이기 때문에 느리고. 
처리해야 할 코드 양이 방대한 경우, 그 단점이 확실히 느껴진다고한다. 그래서 개발자들은 Go와 같은 저급언어(low-level language)를 활용하여 자바스크립트 툴을 창조하난데,
그렇게 해서 생겨난 게 Esbuild이고 Esbuild는 Go 언어로 작성된 자바스크립트 빌드툴이다.

여기서 VITE는 Esbuild를 기반으로 만들어진 프론트엔드 빌드툴이다.
## ES 모듈 활용 덕에 자바스크립트 코드를 모두 번들할 필요 없이 브라우저에서 자바스크립트 어플리케이션을 작동시킬 수 있다.

#Vite의 핵심
- ES 모듈을 사용하여 브라우저가 필요로 하는 어플리케이션 코드의 일부분만 변환하고 제공하는 것

## Vite는 자바스크립트 모듈을 두 가지 카테고리로 나눈다.

- 의존성 모듈은 node_modules 폴더로부터 import 되는 자바스크립트 모듈이며 개발하는 동안엔 자주 바뀌지 않는 편입니다. 이 모듈은 esbuild를 사용하여 처리된다. Webpack이 브라우저의 요청 이전에 모든 자바스크립트 모듈을 처리하는 반면, Vite는 브라우저 요청 전에 의존성 모듈만 미리 번들링한다.
- 소스코드는 .jsx, .vue, .scss와 같은 라이브러리 관련 확장자를 포함할 수도 있으며, 자주 수정되는 파일이고. 소스코드 전체는 동시에 로드될 필요가 없다는 특징
# Vite는 브라우저의 요청이 있을 시에만 소스코드를 변환하고 제공한다.
# Vite는 수정된 모듈과 관련된 부분만을 교체할 뿐이고, 브라우저에서 해당 모듈을 요청하면 교체된 모듈을 전달할 뿐