---
layout: post
title:  "CSR SSR"
date:   2023-01-25 22:40:03 +0900
categories: CSR SSR
---

한번도 안들어보진 않았지만, 명확히 몰랐던 CSR, SSR

오늘은 이것에 대해 오랜만에 포스팅을 하려고한다.

CSR보다 먼저 SSR은 내가 처음에 알고있는 얕은 지식으로는 페이지가 렌더링 되기 맨~처음에
딱 한번 데이터를 불러온다? 정도의 개념으로 알고 있었는데, 이번 계기를 통해서 제대로 알아보려한다.
먼저... 맨날쓰는 렌더링이란 단어의 뜻부터 명확히 알고가자.

## 렌더링이란, 서버로부터 요청해서 받은 내용을 브라우저 화면에 표시해주는 것이다.

CSR, SSR의 가장 큰 차이는 쉽게 설명하면, 표시해줄 화면을 어디에서, 어떻게 그리느냐의 차이가 있다.

## CSR - Client Side Rendering

클라이언트 사이드 렌더링이란 쉽게.. 클라이언트 측에서 다 해먹는 걸 말한다.
- 서버에서 전체 페이지를 한 번에 렌더링해서 보여주고, 사용자의 요청에 따라 그때 그때 리소스를 서버에서 제공받아, 클라이언트가 해석하고 렌더링 하는 방식이다.

* CSR의 단점
- 사용자가 첫 화면을 보기까지 오래 걸릴 수도 있다.
- 썩 좋지 않은 SEO를 꼽을 수있다. - 처음에 텅텅비어있어서 검색엔진들이 브라우징하는데 어려움이 생길 수 있다.
  (여기서 SEO란 검색엔진 최적화)

그래서 나온게 SSR!
## SSR - Server Side Rendering

서버 사이드 렌더링은 클라이언트 측에서 모든 걸 다 처리하지 않고, 웹사이트에 접속할 때 서버에서 필요한 데이터를
모두 가져와서 HTML파일을 만들게 되고, 만들어진 HTML과 HTML파일을 동적으로 제어할 수 있는 소스코드와 함께 클라이언트에게 보낸다.

* 그래서 페이지 로딩이 빨라지고, 효율적인 SEO가 가능하다.

하지만 SSR도 단점은 있다.

- 먼저 서버가 과부하 걸릴 수 있다.
- 또한 새로고침 이슈도 있다고 한다. blinking issue 라고한다. 유식하게
- ttv 와 tti 이슈가 있다.

여기서 ttv는 time to view  사용자가 보는 것과
tti - time to interaction 사용자의 행동에 반응에하는 것으로 생각하면 되는데,

서버사이드 렌더링은 이미 view는 할 수 있지만, 서버에서 자바스크립트 파일을 받아와야지만, 클릭 같은
이벤트를 실행할 수 있으므로, 서버에서 받아오는 시간에 따라 보기만 보여지고 행동하지 않을 수 있는 단점이 있다.

결론은 둘다 알아둬야한다. 둘 중에 뭐가 더 좋다는 개념이 아니라, 둘다 필요할 때가 있다. 