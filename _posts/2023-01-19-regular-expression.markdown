---
layout: post
title:  "정규표현식 regex"
date:   2023-01-18 22:00:03 +0900
categories: 정규표현식 regex regularExpression
---

정규표현식 aka regex에 대해 알아보자.

코드작성을 할 때 간혹 보였었던 regex는 정규표현식의 줄임말이다.
보통 이전에 form 안에서 이메일? 전화번호 같은 간단한거의 validate를 할 떄 잠깐 발을 담궜던 기억이 있는데,
이제 이것에 대해 한번 제대로 알아보려 한다.

- 기본적으로 / / slash 안에 우리가 기본적으로 찾으려는 pattern을 입력해주면 되고,
- 또한 // i <= 어떤 flag를 이용해서 검색할건지 정해주면 된다. 보편적으로는 g - global과 m - multiline을 이용한다.

# GROUPS and RANGES

Character	뜻
- |	또는
- ()	그룹
- []	문자셋, 괄호안의 어떤 문자든
- [^]	부정 문자셋, 괄호안의 어떤 문가 아닐때
- (?:)	찾지만 기억하지는 않음

## Quantifiers
Character	뜻
- ?	없거나 있거나 (zero or one)
- *	없거나 있거나 많거나 (zero or more)
- +	하나 또는 많이 (one or more)
- {n}	n번 반복
- {min,}	최소
- {min,max}	최소, 그리고 최대

## Boundary-type
- Character	뜻
- \b	단어 경계
- \B	단어 경계가 아님
- ^	문장의 시작
- $	문장의 끝

## Character classes
- Character	뜻
- \	특수 문자가 아닌 문자
- .	어떤 글자 (줄바꿈 문자 제외)
- \d	digit 숫자
- \D	digit 숫자 아님
- \w	word 문자
- \W	word 문자 아님
- \s	space 공백
- \S	space 공백 아님

이런식으로 종류가 많은데 강의를 몇개 들어보니 다 외울필요 없이 그때 그떄 필요한걸 찾아쓰는게 나을거같다.

## JavaScript에서 정규 표현식 사용하기
이제 regex와 함께 쓰는 메서드 들을 알아보려는데 저번에 본 2가지를 정리한다.

- match()	- 캡처 그룹을 포함해서 모든 일치를 담은 배열을 반환합니다. 일치가 없으면 null을 반환합니다.
- test() - 문자열에 일치하는 부분이 있는지 확인합니다. true 또는 false를 반환합니다.
- search()	문자열에서 일치하는 부분을 탐색합니다. 일치하는 부분의 인덱스, 또는 일치가 없는 경우 -1을 반환합니다.
- replace()	문자열에서 일치하는 부분을 탐색하고, 그 부분을 대체 문자열로 바꿉니다.

이정도 외우둬면 좋을 것 같다.

또!
자주쓰는 표현식
- 이메일 - /^[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\.]?[0-9a-zA-Z])*\.[a-zA-Z]{2,3}$/i
- 전화번호 - /^\d{3}-\d{3,4}-\d{4}$/
- 핸드폰 번호 - /^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$/
- URL - ^(https?):\/\/([^:\/\s]+)(:([^\/]*))?((\/[^\s/\/]+)*)?\/?([^#\s\?]*)(\?([^#\s]*))?(#(\w*))?$

끝!